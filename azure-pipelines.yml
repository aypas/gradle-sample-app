# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- development

pr:
  branches:
    include:
      - main
pool:
  vmImage: ubuntu-latest

steps:
- script: ls
  displayName: 'Run a one-line script'
- script: pwd
  displayName: "testing"
- script: ls $(Agent.BuildDirectory)
  displayName: 'checking build dir value'

- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
- script: ls
- script: ls build
- script: ls build/libs

- task: Docker@2
  inputs:
    containerRegistry: 'docker_hub'
    repository: 'aypas/gradle-test'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile.only-package'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'test-sonar'
    organization: 'aypas'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'aypas_gradle-sample-app'
    cliProjectName: 'gradle-sample-app'
    cliSources: '.'
    extraProperties: sonar.java.binaries=build/**/*

- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

